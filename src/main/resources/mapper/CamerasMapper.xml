<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xsx.blog.mapper.CamerasMapper" >
  <resultMap id="BaseResultMap" type="com.xsx.blog.model.Cameras" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="tags" property="tags" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="statu" property="statu" jdbcType="INTEGER" />
    <result column="look_num" property="lookNum" jdbcType="INTEGER" />
    <result column="zan_num" property="zanNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, tags, create_time, update_time, statu, look_num, zan_num
  </sql>

  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cameras
    <where>
      <if test="request.tags != null and request.tags != ''">
        tags like #{request.tags,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cameras
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cameras
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xsx.blog.model.Cameras" useGeneratedKeys="true" keyProperty="id">
    insert into cameras (id, title, tags, 
      create_time, update_time, statu, 
      look_num, zan_num)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, 
      now(),now(), #{statu,jdbcType=INTEGER},
      #{lookNum,jdbcType=INTEGER}, #{zanNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xsx.blog.model.Cameras" useGeneratedKeys="true" keyProperty="id">
    insert into cameras
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="tags != null" >
        tags,
      </if>
      create_time,update_time,
      <if test="statu != null" >
        statu,
      </if>
      <if test="lookNum != null" >
        look_num,
      </if>
      <if test="zanNum != null" >
        zan_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="tags != null" >
        #{tags,jdbcType=VARCHAR},
      </if>
      now(),now(),
      <if test="statu != null" >
        #{statu,jdbcType=INTEGER},
      </if>
      <if test="lookNum != null" >
        #{lookNum,jdbcType=INTEGER},
      </if>
      <if test="zanNum != null" >
        #{zanNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xsx.blog.model.Cameras" >
    update cameras
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="tags != null" >
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      update_time = now(),
      <if test="statu != null" >
        statu = #{statu,jdbcType=INTEGER},
      </if>
      <if test="lookNum != null" >
        look_num = #{lookNum,jdbcType=INTEGER},
      </if>
      <if test="zanNum != null" >
        zan_num = #{zanNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xsx.blog.model.Cameras" >
    update cameras
    set title = #{title,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      update_time = now(),
      statu = #{statu,jdbcType=INTEGER},
      look_num = #{lookNum,jdbcType=INTEGER},
      zan_num = #{zanNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>